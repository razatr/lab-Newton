{"version":3,"sources":["Chart/newton.js","Chart/index.js","App.js","index.js"],"names":["h","Math","PI","points","f","x","sin","sqrt","dividedDifferences","arr","length","slice","polynomial","n","res","multiplier","i","console","log","func","newton","push","y","Chart","maxDomain","minDomain","theme","VictoryTheme","material","containerComponent","responsive","width","height","data","animate","duration","style","stroke","delay","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAAMA,EAAIC,KAAKC,GAAK,EACdC,EAAS,CACX,GAAMH,EACN,IAAMA,EACN,IAAMA,EACN,IAAMA,EACN,IAAMA,GAGV,SAASI,EAAEC,GACP,OAAQJ,KAAKK,IAAID,GAAKJ,KAAKM,KAAKF,GAAK,EAKzC,SAASG,EAAmBC,GACxB,OAAIA,EAAIC,OAAS,GACLF,EAAmBC,EAAIE,MAAM,IAAMH,EAAmBC,EAAIE,MAAM,EAAGF,EAAIC,OAAS,MAAQD,EAAIA,EAAIC,OAAS,GAAKD,EAAI,IAE3G,IAAfA,EAAIC,QACIN,EAAEK,EAAI,IAAML,EAAEK,EAAI,MAAQA,EAAI,GAAKA,EAAI,SADnD,EAIJ,SAASG,EAAWP,EAAGQ,GAInB,IAHA,IAAIC,EAAMV,EAAED,EAAO,IACfY,EAAa,EAERC,EAAI,EAAGA,EAAIH,EAAGG,IACnBD,GAAcV,EAAIF,EAAOa,EAAI,GAC7BF,GAAON,EAAmBL,EAAOQ,MAAM,EAAGK,EAAI,IAAMD,EAGxD,OAAOD,EAnBXG,QAAQC,IAAId,EAAED,EAAO,KAyBrB,IAHO,IAAMgB,EAAO,GACPC,EAAS,GAEbJ,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC1B,IAAIX,EAAIW,EAAI,GACZG,EAAKE,KAAK,CACNhB,EAAGA,EACHiB,EAAGlB,EAAEC,KAGTe,EAAOC,KAAK,CACRhB,EAAGA,EACHiB,EAAGV,EAAWP,EAAG,KCfVkB,MA5Bf,WACI,OAAQ,kBAAC,IAAD,CACJC,UAAY,CAAEnB,EAAG,EAAGiB,EAAG,GACvBG,UAAY,CAAEpB,GAAI,EAAGiB,GAAI,GACzBI,MAAQC,IAAaC,SACrBC,mBAAqB,kBAAC,IAAD,CAAkBC,YAAa,IACpDC,MAAQ,IACRC,OAAS,KACT,kBAAC,IAAD,CAAaC,KAAOd,EACPe,QAAU,CAAEC,SAAU,MACtBC,MAAQ,CACJH,KAAM,CACFI,OAAQ,cAG7B,kBAAC,IAAD,CAAaJ,KAAOb,EACPc,QAAU,CACNC,SAAU,KACVG,MAAO,KAEXF,MAAQ,CACJH,KAAM,CACFI,OAAQ,gBCjBtBE,MANf,WACI,OAAQ,kBAAC,WAAD,KACJ,kBAAC,EAAD,QCDRC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.d4366aa8.chunk.js","sourcesContent":["const h = Math.PI / 7\r\nconst points = [\r\n    0.5 * h,\r\n    2.5 * h,\r\n    6.5 * h,\r\n    4.5 * h,\r\n    1.5 * h\r\n]\r\n\r\nfunction f(x) {\r\n    return (Math.sin(x) * Math.sqrt(x) + 1)\r\n}\r\n\r\nconsole.log(f(points[0]))\r\n\r\nfunction dividedDifferences(arr) {\r\n    if (arr.length > 2) {\r\n        return (dividedDifferences(arr.slice(1)) - dividedDifferences(arr.slice(0, arr.length - 1))) / (arr[arr.length - 1] - arr[0])\r\n    }\r\n    if (arr.length === 2)\r\n        return (f(arr[1]) - f(arr[0])) / (arr[1] - arr[0])\r\n}\r\n\r\nfunction polynomial(x, n) {\r\n    let res = f(points[0])\r\n    let multiplier = 1\r\n\r\n    for (let i = 1; i < n; i++) {\r\n        multiplier *= x - points[i - 1]\r\n        res += dividedDifferences(points.slice(0, i + 1)) * multiplier\r\n    }\r\n\r\n    return res\r\n}\r\n\r\nexport const func = []\r\nexport const newton = []\r\n\r\nfor (let i = 0; i < 128; i++) {\r\n    let x = i / 20\r\n    func.push({\r\n        x: x,\r\n        y: f(x)\r\n    })\r\n\r\n    newton.push({\r\n        x: x,\r\n        y: polynomial(x, 5)\r\n    })\r\n}","import React from 'react'\r\nimport { VictoryChart, VictoryLine, VictoryTheme, VictoryContainer } from 'victory'\r\nimport { func, newton } from './newton'\r\n\r\nfunction Chart() {\r\n    return (<VictoryChart\r\n        maxDomain={ { x: 7, y: 4 } }\r\n        minDomain={ { x: -1, y: -4 } }\r\n        theme={ VictoryTheme.material }\r\n        containerComponent={ <VictoryContainer responsive={ false }/> }\r\n        width={ 800 }\r\n        height={ 800 }>\r\n        <VictoryLine data={ func }\r\n                     animate={ { duration: 1500 } }\r\n                     style={ {\r\n                         data: {\r\n                             stroke: '#c43a31'\r\n                         }\r\n                     } }/>\r\n        <VictoryLine data={ newton }\r\n                     animate={ {\r\n                         duration: 1500,\r\n                         delay: 1000\r\n                     } }\r\n                     style={ {\r\n                         data: {\r\n                             stroke: '#00ff00'\r\n                         }\r\n                     } }/>\r\n    </VictoryChart>)\r\n}\r\n\r\nexport default Chart","import React, { Fragment } from 'react'\nimport Chart from './Chart'\n\nfunction App() {\n    return (<Fragment>\n        <Chart/>\n    </Fragment>)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}